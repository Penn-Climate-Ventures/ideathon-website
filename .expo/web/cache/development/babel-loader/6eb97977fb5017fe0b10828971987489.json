{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/aliristang/Desktop/prize-website/.cache/loading-indicator/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport emitter from \"../emitter\";\nimport { Indicator } from \"./indicator\";\nexport var LoadingIndicatorEventHandler = function (_React$Component) {\n  _inherits(LoadingIndicatorEventHandler, _React$Component);\n\n  var _super = _createSuper(LoadingIndicatorEventHandler);\n\n  function LoadingIndicatorEventHandler() {\n    var _this;\n\n    _classCallCheck(this, LoadingIndicatorEventHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      visible: false\n    };\n\n    _this.show = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.hide = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoadingIndicatorEventHandler, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      emitter.on(\"onDelayedLoadPageResources\", this.show);\n      emitter.on(\"onRouteUpdate\", this.hide);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      emitter.off(\"onDelayedLoadPageResources\", this.show);\n      emitter.off(\"onRouteUpdate\", this.hide);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Indicator, {\n        visible: this.state.visible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return LoadingIndicatorEventHandler;\n}(React.Component);","map":{"version":3,"sources":["/Users/aliristang/Desktop/prize-website/.cache/loading-indicator/index.js"],"names":["React","emitter","Indicator","LoadingIndicatorEventHandler","state","visible","show","setState","hide","on","off","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,WAAaC,4BAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACEC,KADF,GACU;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADV;;AAAA,UAGEC,IAHF,GAGS,YAAM;AACX,YAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KALH;;AAAA,UAOEG,IAPF,GAOS,YAAM;AACX,YAAKD,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KATH;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAWE,6BAAoB;AAClBJ,MAAAA,OAAO,CAACQ,EAAR,+BAAyC,KAAKH,IAA9C;AACAL,MAAAA,OAAO,CAACQ,EAAR,kBAA4B,KAAKD,IAAjC;AACD;AAdH;AAAA;AAAA,WAgBE,gCAAuB;AACrBP,MAAAA,OAAO,CAACS,GAAR,+BAA0C,KAAKJ,IAA/C;AACAL,MAAAA,OAAO,CAACS,GAAR,kBAA6B,KAAKF,IAAlC;AACD;AAnBH;AAAA;AAAA,WAqBE,kBAAS;AACP,aAAO,oBAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AAvBH;;AAAA;AAAA,EAAkDL,KAAK,CAACW,SAAxD","sourcesContent":["import React from \"react\"\n\nimport emitter from \"../emitter\"\nimport { Indicator } from \"./indicator\"\n\n// no hooks because we support react versions without hooks support\nexport class LoadingIndicatorEventHandler extends React.Component {\n  state = { visible: false }\n\n  show = () => {\n    this.setState({ visible: true })\n  }\n\n  hide = () => {\n    this.setState({ visible: false })\n  }\n\n  componentDidMount() {\n    emitter.on(`onDelayedLoadPageResources`, this.show)\n    emitter.on(`onRouteUpdate`, this.hide)\n  }\n\n  componentWillUnmount() {\n    emitter.off(`onDelayedLoadPageResources`, this.show)\n    emitter.off(`onRouteUpdate`, this.hide)\n  }\n\n  render() {\n    return <Indicator visible={this.state.visible} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}