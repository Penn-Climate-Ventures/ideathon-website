{"ast":null,"code":"var _jsxFileName = \"/Users/aliristang/Desktop/prize-website/.cache/loading-indicator/indicator.js\";\nimport React from \"react\";\nimport Portal from \"./portal\";\nimport Style from \"./style\";\nimport { isLoadingIndicatorEnabled } from \"$virtual/loading-indicator\";\nimport { debugLog } from \"../debug-log\";\n\nif (typeof window === \"undefined\") {\n  throw new Error(\"Loading indicator should never be imported in code that doesn't target only browsers\");\n}\n\nif (module.hot) {\n  module.hot.accept(\"$virtual/loading-indicator\", function () {});\n}\n\nif (typeof window.___gatsbyDidShowLoadingIndicatorBefore === \"undefined\") {\n  window.___gatsbyDidShowLoadingIndicatorBefore = false;\n}\n\nexport function Indicator(_ref) {\n  var _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? true : _ref$visible;\n\n  if (!isLoadingIndicatorEnabled()) {\n    return null;\n  }\n\n  if (!window.___gatsbyDidShowLoadingIndicatorBefore) {\n    debugLog(\"A loading indicator is displayed in-browser whenever content is being requested upon navigation (Query On Demand).\\n\\nYou can disable the loading indicator for your current session by visiting \" + window.location.origin + \"/___loading-indicator/disable\");\n    window.___gatsbyDidShowLoadingIndicatorBefore = true;\n  }\n\n  return React.createElement(Portal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Style, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(\"div\", {\n    \"data-gatsby-loading-indicator\": \"root\",\n    \"data-gatsby-loading-indicator-visible\": visible.toString(),\n    \"aria-live\": \"assertive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(\"div\", {\n    \"data-gatsby-loading-indicator\": \"spinner\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(\"path\", {\n    d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }))), React.createElement(\"div\", {\n    \"data-gatsby-loading-indicator\": \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, visible ? \"Preparing requested page\" : \"\")));\n}","map":{"version":3,"sources":["/Users/aliristang/Desktop/prize-website/.cache/loading-indicator/indicator.js"],"names":["React","Portal","Style","isLoadingIndicatorEnabled","debugLog","window","Error","module","hot","accept","___gatsbyDidShowLoadingIndicatorBefore","Indicator","visible","location","origin","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,yBAAT,QAA0C,4BAA1C;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,IAAI,OAAOC,MAAP,gBAAJ,EAAmC;AACjC,QAAM,IAAIC,KAAJ,wFAAN;AAGD;;AAED,IAAIC,MAAM,CAACC,GAAX,EAAgB;AACdD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,+BAAgD,YAAM,CAGrD,CAHD;AAID;;AAKD,IAAI,OAAOJ,MAAM,CAACK,sCAAd,gBAAJ,EAA0E;AACxEL,EAAAA,MAAM,CAACK,sCAAP,GAAgD,KAAhD;AACD;;AAED,OAAO,SAASC,SAAT,OAAuC;AAAA,0BAAlBC,OAAkB;AAAA,MAAlBA,OAAkB,6BAAR,IAAQ;;AAC5C,MAAI,CAACT,yBAAyB,EAA9B,EAAkC;AAChC,WAAO,IAAP;AACD;;AAED,MAAI,CAACE,MAAM,CAACK,sCAAZ,EAAoD;AAElDN,IAAAA,QAAQ,uMAC8LC,MAAM,CAACQ,QAAP,CAAgBC,MAD9M,mCAAR;AAGAT,IAAAA,MAAM,CAACK,sCAAP,GAAgD,IAAhD;AACD;;AAED,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AACE,qCAA8B,MADhC;AAGE,6CAAuCE,OAAO,CAACG,QAAR,EAHzC;AAIE,iBAAU,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,qCAA8B,SAAnC;AAA6C,mBAAY,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,IAAI,EAAC,cAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAM,IAAA,CAAC,EAAC,eAAR;AAAwB,IAAA,IAAI,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAM,IAAA,CAAC,EAAC,wOAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CANF,EAgBE;AAAK,qCAA8B,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,kCADV,CAhBF,CAFF,CADF;AAyBD","sourcesContent":["import React from \"react\"\nimport Portal from \"./portal\"\nimport Style from \"./style\"\nimport { isLoadingIndicatorEnabled } from \"$virtual/loading-indicator\"\nimport { debugLog } from \"../debug-log\"\n\nif (typeof window === `undefined`) {\n  throw new Error(\n    `Loading indicator should never be imported in code that doesn't target only browsers`\n  )\n}\n\nif (module.hot) {\n  module.hot.accept(`$virtual/loading-indicator`, () => {\n    // isLoadingIndicatorEnabled is imported with ES import so no need\n    // for dedicated handling as HMR just replace it in that case\n  })\n}\n\n// HMR can rerun this, so check if it was set before\n// we also set it on window and not just in module scope because of HMR resetting\n// module scope\nif (typeof window.___gatsbyDidShowLoadingIndicatorBefore === `undefined`) {\n  window.___gatsbyDidShowLoadingIndicatorBefore = false\n}\n\nexport function Indicator({ visible = true }) {\n  if (!isLoadingIndicatorEnabled()) {\n    return null\n  }\n\n  if (!window.___gatsbyDidShowLoadingIndicatorBefore) {\n    // not ideal to this in render function, but that's just console info\n    debugLog(\n      `A loading indicator is displayed in-browser whenever content is being requested upon navigation (Query On Demand).\\n\\nYou can disable the loading indicator for your current session by visiting ${window.location.origin}/___loading-indicator/disable`\n    )\n    window.___gatsbyDidShowLoadingIndicatorBefore = true\n  }\n\n  return (\n    <Portal>\n      <Style />\n      <div\n        data-gatsby-loading-indicator=\"root\"\n        // preact doesn't render data attributes with a literal bool false value to dom\n        data-gatsby-loading-indicator-visible={visible.toString()}\n        aria-live=\"assertive\"\n      >\n        <div data-gatsby-loading-indicator=\"spinner\" aria-hidden=\"true\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"currentColor\"\n          >\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\" />\n          </svg>\n        </div>\n        <div data-gatsby-loading-indicator=\"text\">\n          {visible ? `Preparing requested page` : ``}\n        </div>\n      </div>\n    </Portal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}